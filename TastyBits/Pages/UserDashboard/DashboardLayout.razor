@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Identity;
@using TastyBits.Pages.UserDashboard.Nav
@using TastyBits.Services;
@inject LoggedUserService loggedUser;


<MudThemeProvider Theme="MyCustomTheme"/>
<MudDialogProvider  CloseButton="true" />
<MudSnackbarProvider />


<MudLayout>
    <MudAppBar ToolBarClass="appclass" >
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
                @if (_demoMode) {
                    <div class="p-3 bg-amber-300 text-gray-50 flex justify-center rounded-lg ">
                        <p class="text-lg text-emerald-800">Demo</p>
                    </div>
                }
            <MudText Class="mailSize" Color="Color.Dark">@userEmail</MudText>
    </MudAppBar>
    <MudDrawer Color="Color.Transparent" PreserveOpenState="false" @bind-Open="@open" Width="20rem" Variant="DrawerVariant.Responsive">
        <DashboardNav Class="col-start-1 w-50"></DashboardNav>
    </MudDrawer> 
    <MudMainContent >
        <main id="rightDashboardLayout" class="flex justify-center">
            <div class="p-5 grow">
                @Body
            </div>
        </main>
    </MudMainContent>
</MudLayout>

<style>
    .appclass {
        display: flex;
        justify-content: space-between;
    }
</style>
@code {
    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = "#10b981",
                Secondary = "#6ee7b7",
                AppbarBackground = "#6ee7b7",
                Success = "#059669",
                Error = "#d64545",
                Warning = "#f59e0b",
                Info = "#6b7280",
                GrayDark = "#333333"
            }
        };

    bool open =false;

    void ToggleDrawer()
    {
        open = !open;
    }

    private string userEmail { get; set; }
    private bool _demoMode { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var user = await loggedUser.GetUserDataAsync();
        userEmail = user.Email;
        _demoMode = await loggedUser.IsCurrentUserDemo();
    }
}
