@page "/dashboard/allrecipes";
@page "/dashboard/home";

@layout DashboardLayout;
@using System.Collections.ObjectModel;
@using Application.UseCases;
@using Domain.Models;
@using Infrastructure.Data;
@using Microsoft.EntityFrameworkCore;
@using Serilog;
@using TastyBits.Pages.UserDashboard.Components;
@using TastyBits.Services;
@inject TastyDialogService _tastyDialog;
@inject ISnackbar _snackBar;
@inject LoggedUserService _loggedUserService;
@inject NavigationManager navManager;
@inject GetUserMealsById _userMealsUseCase;

<AuthorizeView>
    <Authorized>
        <div id="recipeToolbar" class="flex p-2 gap-3 rounded-lg focus:outline-none">
            <MudSelect T="string" Label="Ingridients" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                <MudSelectItem T="string" Value="@("Meat")" />
                <MudSelectItem T="string" Value="@("Vegetarian")" />
                <MudSelectItem T="string" Value="@("Vegan")" />
                <MudSelectItem T="string" Value="@("Whatever")" />
            </MudSelect>
            <MudSelect T="string" Label="Time of day" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                <MudSelectItem T="string" Value="@("Breakfast")" />
                <MudSelectItem T="string" Value="@("Lunch")" />
                <MudSelectItem T="string" Value="@("Dinner")" />
                <MudSelectItem T="string" Value="@("Snack")" />
            </MudSelect>
        </div>
        <div id="recipes" class="flex flex-wrap mt-5 gap-10 p-2 justify-center ">
            <div @onclick=@AddNewMeal class="flex justify-center items-center border-dashed border-emerald-200 border-2 rounded-lg w-[27rem]
                    hover:cursor-pointer hover:bg-emerald-50
                    hover:border-emerald-300 duration-300">
                <div class="text-center text-emerald-500 opacity-60">
                    <i class="fa fa-add h-10 w-10"></i>
                    <p class="font-medium text-lg">Add New</p>
                </div>
            </div>
            @foreach (UserMeal meal in _allRecipes) {
                <RecipeCard Meal="meal"
                OnOpenButtonClick="@( ()=>OpenSelectedMeal(meal) )"
                >
            </RecipeCard>
            }
        </div>
    </Authorized>
    <NotAuthorized>
        <h1 role="note">Please login in to view this page</h1>
    </NotAuthorized>
</AuthorizeView>


@code {
    private List<UserMeal> _allRecipes = new List<UserMeal>();

    protected override async Task OnInitializedAsync()
    {

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_loggedUserService.UserStore != null & firstRender) {
            await LoadUserRecipes();
        }
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task AddNewMeal()
    {
        var newDialog=await _tastyDialog.ShowAddNewMealDialog();
        var result = await newDialog.Result;
        await LoadUserRecipes();
    }
    private async Task OpenSelectedMeal(UserMeal selectedMeal)
    {
        var newDialog = await _tastyDialog.ShowMealDialog(selectedMeal);
        var result = await newDialog.Result;
        await LoadUserRecipes();
    }
    private async Task LoadUserRecipes()
    {
        _allRecipes = await _userMealsUseCase.GetUserMeals(_loggedUserService.UserStore.Id);
        StateHasChanged();
    }

    private void FilterSelected()
    {
        //TODO filter selected meals
    }

    //TODO proaj prilagodit za mobile view
    //TODO dodaj role za tasty app, odnosno dodaj da se može demo verzija rokat
}
