@page "/dashboard/recipe-new";
@layout DashboardLayout;
@using Microsoft.AspNetCore.Components.Forms
@using Serilog;
@using TastyBits.Components;
@using TastyBits.Model;
@using TastyBits.Services;
@inject IDialogService DialogService;
@inject DbService _dbService;

<EditForm Model="@newRecipe" OnSubmit="@InsertRecipe" >
    <DataAnnotationsValidator/>
    <div class="form-input">
        <label>Add name</label>
        <InputText class="border-2" @bind-Value="@newRecipe.Name"></InputText>
        <ValidationMessage For="@(()=>newRecipe.Name)"></ValidationMessage>
    </div>
    <div class="form-input">
        <label>Description</label>
        <InputText class="border-2" @bind-Value="@newRecipe.Description"></InputText>
         <ValidationMessage For="@(() => newRecipe.Description)"></ValidationMessage>
    </div>
    <div class="form-input">
        <label>Ingridients</label>
        <InputText class="border-2" @bind-Value="@newRecipe.Ingridients"></InputText>
        <ValidationMessage  For="@(() => newRecipe.Ingridients)"></ValidationMessage>
    </div>

    <div class="flex flex-col mt-5 border-2 p-2">
        <label class="text-lg">Choose picture</label>
        <InputFile ></InputFile>
    </div>
    <button type="submit" class="mainBtn mt-5">
        Save
    </button>
</EditForm>

@code {
    private Recipe newRecipe { get; set; } = new();

    [Inject]
    private TastyDialogService _dialogService { get; set; }

    private EditContext newRecipeContext { get; set; }
    [Parameter]
    public EventCallback OnSubmit { get; set; }

    protected override void OnInitialized()
    {
        newRecipeContext = new EditContext(newRecipe);
    }
    public async void InsertRecipe(EditContext context)
    {
        bool isValid = context.Validate();

        //Log.Information("FORM VALID: "+isValid.ToString());
        if (isValid) {
            bool isOk = await _dbService.InsertNewRecipeAsync(newRecipe);
            if (isOk) {
                Log.Information($"inserted to database: {newRecipe.Id}");
                _dialogService.ShowInfoSuccess("New recipe added!");
                newRecipe = new();
            }
        } else {
            // Model is not valid, handle validation errors or display them to the user
        }
    }
}
